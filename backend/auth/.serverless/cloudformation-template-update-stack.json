{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      }
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "PreTokenGenerationLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/auth-dev-preTokenGeneration"
      }
    },
    "CognitoAuthorizerLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/auth-dev-cognitoAuthorizer"
      }
    },
    "RefreshTokenLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/auth-dev-refreshToken"
      }
    },
    "UpdateRolesLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/auth-dev-updateRoles"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "auth",
                  "dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:TagResource"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/auth-dev*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/auth-dev*:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:GetItem",
                    "dynamodb:BatchGetItem",
                    "dynamodb:Query",
                    "dynamodb:DescribeTable"
                  ],
                  "Resource": "arn:aws:dynamodb:us-west-2:221025630675:table/UserProfiles"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "cognito-idp:InitiateAuth",
                    "cognito-idp:AdminListGroupsForUser",
                    "cognito-idp:AdminAddUserToGroup",
                    "cognito-idp:AdminRemoveUserFromGroup"
                  ],
                  "Resource": "arn:aws:cognito-idp:us-west-2:221025630675:userpool/placeholder"
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "auth",
              "dev",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "PreTokenGenerationLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/auth/dev/1757537049639-2025-09-10T20:44:09.639Z/auth.zip"
        },
        "Handler": "triggers/preTokenGeneration.handler",
        "Runtime": "nodejs18.x",
        "FunctionName": "auth-dev-preTokenGeneration",
        "MemorySize": 256,
        "Timeout": 15,
        "Environment": {
          "Variables": {
            "ALLOWED_ORIGINS": "https://beta.mylg.studio,https://mylg.studio,http://localhost:3000",
            "CORS_WILDCARD_HOSTS": "mylg.studio",
            "CORS_ALLOW_CREDENTIALS": "false",
            "CORS_DEFAULT_ORIGIN": "https://beta.mylg.studio",
            "USER_PROFILES_TABLE": "UserProfiles",
            "COGNITO_USER_POOL_ID": {
              "Ref": "CognitoUserPool"
            },
            "COGNITO_USER_POOL_NAME": "mylg-dev-users-west2",
            "COGNITO_USER_CLIENT_ID": {
              "Ref": "CognitoUserPoolClient"
            }
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "PreTokenGenerationLogGroup"
      ]
    },
    "CognitoAuthorizerLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/auth/dev/1757537049639-2025-09-10T20:44:09.639Z/auth.zip"
        },
        "Handler": "triggers/cognitoAuthorizer.handler",
        "Runtime": "nodejs18.x",
        "FunctionName": "auth-dev-cognitoAuthorizer",
        "MemorySize": 256,
        "Timeout": 15,
        "Environment": {
          "Variables": {
            "ALLOWED_ORIGINS": "https://beta.mylg.studio,https://mylg.studio,http://localhost:3000",
            "CORS_WILDCARD_HOSTS": "mylg.studio",
            "CORS_ALLOW_CREDENTIALS": "false",
            "CORS_DEFAULT_ORIGIN": "https://beta.mylg.studio",
            "USER_PROFILES_TABLE": "UserProfiles",
            "COGNITO_USER_POOL_ID": {
              "Ref": "CognitoUserPool"
            },
            "COGNITO_USER_POOL_NAME": "mylg-dev-users-west2",
            "COGNITO_USER_CLIENT_ID": {
              "Ref": "CognitoUserPoolClient"
            },
            "COGNITO_POOL_ID": {
              "Ref": "CognitoUserPool"
            },
            "COGNITO_CLIENT_ID": {
              "Ref": "CognitoUserPoolClient"
            }
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "CognitoAuthorizerLogGroup"
      ]
    },
    "RefreshTokenLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/auth/dev/1757537049639-2025-09-10T20:44:09.639Z/auth.zip"
        },
        "Handler": "routes/refreshToken.handler",
        "Runtime": "nodejs18.x",
        "FunctionName": "auth-dev-refreshToken",
        "MemorySize": 256,
        "Timeout": 15,
        "Environment": {
          "Variables": {
            "ALLOWED_ORIGINS": "https://beta.mylg.studio,https://mylg.studio,http://localhost:3000",
            "CORS_WILDCARD_HOSTS": "mylg.studio",
            "CORS_ALLOW_CREDENTIALS": "false",
            "CORS_DEFAULT_ORIGIN": "https://beta.mylg.studio",
            "USER_PROFILES_TABLE": "UserProfiles",
            "COGNITO_USER_POOL_ID": {
              "Ref": "CognitoUserPool"
            },
            "COGNITO_USER_POOL_NAME": "mylg-dev-users-west2",
            "COGNITO_USER_CLIENT_ID": {
              "Ref": "CognitoUserPoolClient"
            }
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          "arn:aws:lambda:us-west-2:221025630675:layer:shared-utils:1"
        ]
      },
      "DependsOn": [
        "RefreshTokenLogGroup"
      ]
    },
    "UpdateRolesLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/auth/dev/1757537049639-2025-09-10T20:44:09.639Z/auth.zip"
        },
        "Handler": "routes/updateRoles.handler",
        "Runtime": "nodejs18.x",
        "FunctionName": "auth-dev-updateRoles",
        "MemorySize": 256,
        "Timeout": 15,
        "Environment": {
          "Variables": {
            "ALLOWED_ORIGINS": "https://beta.mylg.studio,https://mylg.studio,http://localhost:3000",
            "CORS_WILDCARD_HOSTS": "mylg.studio",
            "CORS_ALLOW_CREDENTIALS": "false",
            "CORS_DEFAULT_ORIGIN": "https://beta.mylg.studio",
            "USER_PROFILES_TABLE": "UserProfiles",
            "COGNITO_USER_POOL_ID": {
              "Ref": "CognitoUserPool"
            },
            "COGNITO_USER_POOL_NAME": "mylg-dev-users-west2",
            "COGNITO_USER_CLIENT_ID": {
              "Ref": "CognitoUserPoolClient"
            }
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          "arn:aws:lambda:us-west-2:221025630675:layer:shared-utils:1"
        ]
      },
      "DependsOn": [
        "UpdateRolesLogGroup"
      ]
    },
    "PreTokenGenerationLambdaVersionSv9AefADifdHRrTubEjJY34ZljXJXybOwKDJfuoZ04": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "PreTokenGenerationLambdaFunction"
        },
        "CodeSha256": "e1ux22HxTpRIsvPzOHPuchnFXLR2i3BWtqKm59UvEBk="
      }
    },
    "CognitoAuthorizerLambdaVersionOoATUWsFMqnxhbwL7V2zL7vI5Vn0jVr6I7N6OVVVVTY": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "CognitoAuthorizerLambdaFunction"
        },
        "CodeSha256": "e1ux22HxTpRIsvPzOHPuchnFXLR2i3BWtqKm59UvEBk="
      }
    },
    "RefreshTokenLambdaVersionHbcS4Q6IZUs0XgNBMUVAL9w1BQbUZbXiHuc8XHXIYI": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "RefreshTokenLambdaFunction"
        },
        "CodeSha256": "e1ux22HxTpRIsvPzOHPuchnFXLR2i3BWtqKm59UvEBk="
      }
    },
    "UpdateRolesLambdaVersionDPczGOGVAi6b9wtcFC8IWJGrQAXf3HZQKUjKck8hb4": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "UpdateRolesLambdaFunction"
        },
        "CodeSha256": "e1ux22HxTpRIsvPzOHPuchnFXLR2i3BWtqKm59UvEBk="
      }
    },
    "CognitoUserPoolMylgdevuserswest2": {
      "Type": "AWS::Cognito::UserPool",
      "Properties": {
        "UserPoolName": "mylg-dev-users-west2",
        "LambdaConfig": {
          "PreTokenGeneration": {
            "Fn::GetAtt": [
              "PreTokenGenerationLambdaFunction",
              "Arn"
            ]
          }
        }
      },
      "DependsOn": [
        "PreTokenGenerationLambdaFunction"
      ]
    },
    "PreTokenGenerationLambdaPermissionCognitoUserPoolMylgdevuserswest2TriggerSourcePreTokenGeneration": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "PreTokenGenerationLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "cognito-idp.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "CognitoUserPoolMylgdevuserswest2",
            "Arn"
          ]
        }
      }
    },
    "HttpApi": {
      "Type": "AWS::ApiGatewayV2::Api",
      "Properties": {
        "Name": "dev-auth",
        "ProtocolType": "HTTP"
      }
    },
    "HttpApiStage": {
      "Type": "AWS::ApiGatewayV2::Stage",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "StageName": "$default",
        "AutoDeploy": true,
        "DefaultRouteSettings": {
          "DetailedMetricsEnabled": false
        }
      }
    },
    "RefreshTokenLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "RefreshTokenLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationRefreshToken": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "RefreshTokenLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 30000
      }
    },
    "HttpApiRoutePostAuthRefreshDashtoken": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "POST /auth/refresh-token",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationRefreshToken"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationRefreshToken"
    },
    "UpdateRolesLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "UpdateRolesLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationUpdateRoles": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "UpdateRolesLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 30000
      }
    },
    "HttpApiRoutePostAuthUpdateDashroles": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "POST /auth/update-roles",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationUpdateRoles"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationUpdateRoles"
    },
    "CognitoUserPool": {
      "Type": "AWS::Cognito::UserPool",
      "Properties": {
        "UserPoolName": "mylg-dev-users-west2",
        "AliasAttributes": [
          "email"
        ],
        "AutoVerifiedAttributes": [
          "email"
        ],
        "UsernameConfiguration": {
          "CaseSensitive": false
        },
        "Policies": {
          "PasswordPolicy": {
            "MinimumLength": 8,
            "RequireUppercase": true,
            "RequireLowercase": true,
            "RequireNumbers": true,
            "RequireSymbols": false
          }
        },
        "Schema": [
          {
            "Name": "email",
            "AttributeDataType": "String",
            "Required": true,
            "Mutable": true
          }
        ]
      }
    },
    "CognitoUserPoolClient": {
      "Type": "AWS::Cognito::UserPoolClient",
      "Properties": {
        "ClientName": "auth-dev-client",
        "UserPoolId": {
          "Ref": "CognitoUserPool"
        },
        "GenerateSecret": false,
        "ExplicitAuthFlows": [
          "ALLOW_ADMIN_USER_PASSWORD_AUTH",
          "ALLOW_USER_PASSWORD_AUTH",
          "ALLOW_REFRESH_TOKEN_AUTH"
        ],
        "TokenValidityUnits": {
          "AccessToken": "hours",
          "IdToken": "hours",
          "RefreshToken": "days"
        },
        "AccessTokenValidity": 1,
        "IdTokenValidity": 1,
        "RefreshTokenValidity": 30
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      },
      "Export": {
        "Name": "sls-auth-dev-ServerlessDeploymentBucketName"
      }
    },
    "PreTokenGenerationLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "PreTokenGenerationLambdaVersionSv9AefADifdHRrTubEjJY34ZljXJXybOwKDJfuoZ04"
      },
      "Export": {
        "Name": "sls-auth-dev-PreTokenGenerationLambdaFunctionQualifiedArn"
      }
    },
    "CognitoAuthorizerLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "CognitoAuthorizerLambdaVersionOoATUWsFMqnxhbwL7V2zL7vI5Vn0jVr6I7N6OVVVVTY"
      },
      "Export": {
        "Name": "sls-auth-dev-CognitoAuthorizerLambdaFunctionQualifiedArn"
      }
    },
    "RefreshTokenLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "RefreshTokenLambdaVersionHbcS4Q6IZUs0XgNBMUVAL9w1BQbUZbXiHuc8XHXIYI"
      },
      "Export": {
        "Name": "sls-auth-dev-RefreshTokenLambdaFunctionQualifiedArn"
      }
    },
    "UpdateRolesLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "UpdateRolesLambdaVersionDPczGOGVAi6b9wtcFC8IWJGrQAXf3HZQKUjKck8hb4"
      },
      "Export": {
        "Name": "sls-auth-dev-UpdateRolesLambdaFunctionQualifiedArn"
      }
    },
    "HttpApiId": {
      "Description": "Id of the HTTP API",
      "Value": {
        "Ref": "HttpApi"
      },
      "Export": {
        "Name": "sls-auth-dev-HttpApiId"
      }
    },
    "HttpApiUrl": {
      "Description": "URL of the HTTP API",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "HttpApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            }
          ]
        ]
      },
      "Export": {
        "Name": "sls-auth-dev-HttpApiUrl"
      }
    },
    "CognitoUserPoolId": {
      "Value": {
        "Ref": "CognitoUserPool"
      },
      "Export": {
        "Name": "auth-cognito-user-pool-id-dev"
      }
    },
    "CognitoUserPoolClientId": {
      "Value": {
        "Ref": "CognitoUserPoolClient"
      },
      "Export": {
        "Name": "auth-cognito-user-pool-client-id-dev"
      }
    },
    "CognitoUserPoolArn": {
      "Value": {
        "Fn::GetAtt": [
          "CognitoUserPool",
          "Arn"
        ]
      },
      "Export": {
        "Name": "auth-cognito-user-pool-arn-dev"
      }
    },
    "PreTokenGenerationArn": {
      "Value": {
        "Fn::GetAtt": [
          "PreTokenGenerationLambdaFunction",
          "Arn"
        ]
      },
      "Export": {
        "Name": "auth-preTokenGeneration-arn-dev"
      }
    },
    "CognitoAuthorizerArn": {
      "Value": {
        "Fn::GetAtt": [
          "CognitoAuthorizerLambdaFunction",
          "Arn"
        ]
      },
      "Export": {
        "Name": "auth-cognitoAuthorizer-arn-dev"
      }
    }
  }
}