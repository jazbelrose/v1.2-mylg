service: messages
frameworkVersion: '3'

custom:
  env: ${file(../serverless.common.yml):env}

provider:
  name: aws
  runtime: nodejs18.x
  region: us-west-2
  stage: ${opt:stage, 'dev'}
  memorySize: 256
  timeout: 15
  httpApi:
    cors: false  # dynamic CORS in Lambda
  environment:
    # Tables & shared config (CORS, etc.)
    ${self:custom.env}

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:DescribeTable
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - dynamodb:BatchGetItem
            - dynamodb:Query
            - dynamodb:Scan
          Resource:
            # Threads
            - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${env:THREADS_TABLE}

            # Messages + GSIs (messageId-index)
            - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${env:MESSAGES_TABLE}
            - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${env:MESSAGES_TABLE}/index/*

            # Project-scoped messages
            - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${env:PROJECT_MESSAGES_TABLE}

            # Notifications (+ optional index)
            - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${env:NOTIFICATIONS_TABLE}
            - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${env:NOTIFICATIONS_TABLE}/index/*

functions:
  messagesRouter:
    # adjust if your file is not under src/
    handler: src/router.handler
    layers:
      - ${cf:shared-layer-${sls:stage}.SharedUtilsLayerArn}
    events:
      - httpApi:
          path: /messages
          method: ANY
      - httpApi:
          path: /messages/{proxy+}
          method: ANY
      - httpApi:
          path: /messages/health
          method: ANY

package:
  patterns:
    - src/**
    - '!node_modules/.bin/**'
    - '!**/*.map'
