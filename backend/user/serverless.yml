service: users
frameworkVersion: '3'

useDotenv: true

custom:
  env: ${file(../serverless.common.yml):env}

provider:
  name: aws
  runtime: nodejs18.x
  region: us-west-2
  stage: ${opt:stage, 'dev'}
  memorySize: 256
  timeout: 15
  httpApi:
  environment:
    # Tables & shared config (CORS, etc.)
    ${self:custom.env}

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:DescribeTable
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - dynamodb:BatchGetItem
            - dynamodb:Query
            - dynamodb:Scan
          Resource:
            - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${env:USER_PROFILES_TABLE}
            - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${env:INVITES_TABLE}
            - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${env:INVITES_TABLE}/index/*

functions:
  usersRouter:
    # router.mjs is at the service root
    handler: router.handler
    layers:
      - ${cf:shared-layer-${sls:stage}.SharedUtilsLayerArn}
    events:
      # If this service has its own API endpoint, you can replace the block below
      # with a single catch-all: path: /{proxy+}
      - httpApi:
          path: /userProfiles
          method: ANY
      - httpApi:
          path: /userProfiles/{proxy+}
          method: ANY
      - httpApi:
          path: /userProfilesPending/{proxy+}
          method: ANY
      - httpApi:
          path: /invites/{proxy+}
          method: ANY
      - httpApi:
          path: /sendProjectInvitation
          method: ANY
      - httpApi:
          path: /postProjectToUserId
          method: ANY
      - httpApi:
          path: /user/health
          method: ANY
      - httpApi:
          path: /user/{proxy+}
          method: ANY

package:
  patterns:
    - users/**        # include router + helpers under users/
    - '!**/*.map'
    - '!node_modules/.bin/**'
